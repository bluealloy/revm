[workspace]
members = [
    # binary 
    "bins/revme",

    # libraries
    "crates/revm",
    "crates/primitives",
    "crates/interpreter",
    "crates/precompile",
    "crates/database",
    "crates/database/interface",
    "crates/bytecode",
    "crates/state",
    "crates/specification",
    "crates/context",
    "crates/context/interface",
    "crates/handler/interface",
    "crates/handler",

    # variants
    "crates/optimism",
    "crates/inspector",

    # utility
    "crates/statetest-types",

    # examples
    "examples/block_traces",
    "examples/contract_deployment",
    "examples/database_components",
    "examples/uniswap_get_reserves",
    "examples/uniswap_v2_usdc_swap",
    "examples/erc20_gas",
    #"examples/custom_opcodes",
]
resolver = "2"
default-members = ["crates/revm"]

[workspace.dependencies]
# revm
revm = { path = "crates/revm", version = "19.2.0", default-features = false }
primitives = { path = "crates/primitives", package = "revm-primitives", version = "15.1.0", default-features = false }
bytecode = { path = "crates/bytecode", package = "revm-bytecode", version = "1.0.0", default-features = false }
database = { path = "crates/database", package = "revm-database", version = "1.0.0", default-features = false }
database-interface = { path = "crates/database/interface", package = "revm-database-interface", version = "1.0.0", default-features = false }
specification = { path = "crates/specification", package = "revm-specification", version = "1.0.0", default-features = false }
state = { path = "crates/state", package = "revm-state", version = "1.0.0", default-features = false }
interpreter = { path = "crates/interpreter", package = "revm-interpreter", version = "15.0.0", default-features = false }
inspector = { path = "crates/inspector", package = "revm-inspector", version = "1.0.0", default-features = false }
precompile = { path = "crates/precompile", package = "revm-precompile", version = "16.0.0", default-features = false }
statetest-types = { path = "crates/statetest-types", package = "revm-statetest-types", version = "1.0.0", default-features = false }
context = { path = "crates/context", package = "revm-context", version = "1.0.0", default-features = false }
context-interface = { path = "crates/context/interface", package = "revm-context-interface", version = "1.0.0", default-features = false }
handler = { path = "crates/handler", package = "revm-handler", version = "1.0.0", default-features = false }
handler-interface = { path = "crates/handler/interface", package = "revm-handler-interface", version = "1.0.0", default-features = false }

# misc
cfg-if = { version = "1.0", default-features = false }
auto_impl = { version = "1.2.0" }
derive-where = { version = "1.2.7", default-features = false }
criterion = { package = "codspeed-criterion-compat", version = "2.7" }

[workspace.package]
license = "MIT"
authors = ["Dragan Rakita <dragan0rakita@gmail.com>"]
categories = ["no-std", "compilers", "cryptography::cryptocurrencies"]
keywords = ["revm", "evm", "ethereum", "blockchain", "no_std"]
repository = "https://github.com/bluealloy/revm"
documentation = "https://bluealloy.github.io/revm/"
homepage = ""
edition = "2021"

[workspace.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[profile.release]
codegen-units = 16
debug = "line-tables-only"
lto = "thin"
opt-level = 3
panic = "abort"
strip = true

# Use the `--profile profiling` flag to show symbols in release mode.
# e.g. `cargo build --profile profiling`
[profile.profiling]
debug = 2
inherits = "release"
strip = false

# Make sure debug symbols are in the bench profile
[profile.bench]
inherits = "profiling"

[profile.ethtests]
inherits = "test"
opt-level = 3
