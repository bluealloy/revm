[package]
name = "revm"
description = "Revm - Rust Ethereum Virtual Machine"
version = "14.0.1"
authors.workspace = true
edition.workspace = true
keywords.workspace = true
license.workspace = true
repository.workspace = true
readme.workspace = true

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints.rust]
unreachable_pub = "warn"
unused_must_use = "deny"
rust_2018_idioms = "deny"

[lints.rustdoc]
all = "warn"

[dependencies]
# revm
interpreter.workspace = true
precompile.workspace = true
wiring.workspace = true
primitives.workspace = true
database-interface.workspace = true
state.workspace = true
specification.workspace = true
bytecode.workspace = true
database = { workspace = true, optional = true }
transaction.workspace = true

# misc
derive-where = { version = "1.2.7", default-features = false }
dyn-clone = "1.0"

# Optional
serde = { version = "1.0", default-features = false, features = [
    "derive",
    "rc",
], optional = true }

[dev-dependencies]
database.workspace = true
alloy-sol-types = { version = "0.8.2", default-features = false, features = [
    "std",
] }
ethers-contract = { version = "2.0.14", default-features = false }
anyhow = "1.0.89"
criterion = "0.5"
indicatif = "0.17"
reqwest = { version = "0.12" }
rstest = "0.22.0"

alloy-provider = "0.4.2"

[features]
default = ["std", "c-kzg", "secp256k1", "portable", "blst"]
std = ["serde?/std", "interpreter/std", "precompile/std"]
hashbrown = ["interpreter/hashbrown", "precompile/hashbrown"]
serde = [
    "dep:serde",
    "interpreter/serde",
    "database-interface/serde",
    "primitives/serde",
]
arbitrary = ["primitives/arbitrary"]
asm-keccak = ["primitives/asm-keccak"]
portable = ["wiring/portable"]

test-utils = ["database"]

dev = [
    "memory_limit",
    "optional_balance_check",
    "optional_block_gas_limit",
    "optional_eip3607",
    "optional_gas_refund",
    "optional_no_base_fee",
]
memory_limit = ["wiring/memory_limit", "interpreter/memory_limit"]
optional_balance_check = ["wiring/optional_balance_check"]
optional_block_gas_limit = ["wiring/optional_block_gas_limit"]
optional_eip3607 = ["wiring/optional_eip3607"]
optional_gas_refund = ["wiring/optional_gas_refund"]
optional_no_base_fee = ["wiring/optional_no_base_fee"]

# See comments in `precompile`
secp256k1 = ["precompile/secp256k1"]
c-kzg = ["precompile/c-kzg"]
# `kzg-rs` is not audited but useful for `no_std` environment, use it with causing and default to `c-kzg` if possible.
kzg-rs = ["precompile/kzg-rs"]
blst = ["precompile/blst"]
