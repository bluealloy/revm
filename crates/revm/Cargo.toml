[package]
authors.workspace = true
description = "Revm - Rust Ethereum Virtual Machine"
edition.workspace = true
keywords.workspace = true
license.workspace = true
name = "revm"
readme.workspace = true
repository.workspace = true
version = "25.0.0"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[lints.rust]
rust_2018_idioms = "deny"
unreachable_pub = "warn"
unused_must_use = "deny"

[lints.rustdoc]
all = "warn"

[dependencies]
# revm
bytecode.workspace = true
context.workspace = true
context-interface.workspace = true
database.workspace = true
database-interface.workspace = true
handler.workspace = true
inspector.workspace = true
interpreter.workspace = true
precompile.workspace = true
primitives.workspace = true
state.workspace = true

[dev-dependencies]
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = ["alloc", "preserve_order"] }
tokio = { workspace = true, features = ["full"] }

[features]
arbitrary = ["primitives/arbitrary"]
asm-keccak = ["primitives/asm-keccak"]
asyncdb = ["database-interface/asyncdb"]
default = ["blst", "c-kzg", "portable", "secp256k1", "std", "tracer"]
hashbrown = ["interpreter/hashbrown", "precompile/hashbrown"]
serde = [
	"bytecode/serde",
	"context-interface/serde",
	"context/serde",
	"database-interface/serde",
	"database/serde",
	"handler/serde",
	"inspector/serde",
	"interpreter/serde",
	"primitives/serde",
	"state/serde",
]
std = [
	"bytecode/std",
	"context-interface/std",
	"context/std",
	"database-interface/std",
	"database/std",
	"handler/std",
	"inspector/std",
	"interpreter/std",
	"precompile/std",
	"primitives/std",
	"serde/std",
	"serde_json/std",
	"state/std",
]

# Enables alloydb inside database crate
alloydb = ["database/alloydb"]

# Enables serde-json inside inspector crate
serde-json = ["inspector/tracer", "serde"]
tracer = ["inspector/tracer"]

dev = [
	"memory_limit",
	"optional_balance_check",
	"optional_block_gas_limit",
	"optional_eip3607",
	"optional_no_base_fee",
]
memory_limit = ["context/memory_limit", "interpreter/memory_limit"]
optional_balance_check = ["context/optional_balance_check"]
optional_block_gas_limit = ["context/optional_block_gas_limit"]
optional_eip3607 = ["context/optional_eip3607"]
optional_no_base_fee = ["context/optional_no_base_fee"]

# Precompiles features

blst = ["precompile/blst"]
bn = ["precompile/bn"]
c-kzg = [
	"precompile/c-kzg",
] # `kzg-rs` is not audited but useful for `no_std` environment, use it with causing and default to `c-kzg` if possible.
kzg-rs = ["precompile/kzg-rs"]
secp256k1 = ["precompile/secp256k1"] # See comments in `precompile`

# Compile in portable mode, without ISA extensions.
# Binary can be executed on all systems.
portable = ["precompile/portable"]

# use gmp for modexp precompile.
# It is faster library but licences as GPL code, if enabled please make sure to follow the license.
gmp = ["precompile/gmp"]
